class FallbackInput extends HTMLInputElement{constructor(){super(),this.fallback=""}connectedCallback(){this.bindEvents()}bindEvents(){this.addEventListener("keyup",this.onKeyUp.bind(this))}onKeyUp(e){if(e.shiftKey||e.ctrlKey||e.altKey)return;(!e.currentTarget.value||e.currentTarget.value.length<this.fallback.length)&&(this.fallback="");const t=e.keyCode>=65&&e.keyCode<=90,n=32===e.keyCode;(t||n)&&(this.fallback+=String.fromCharCode(e.keyCode).toLowerCase())}}customElements.define("fallback-input",FallbackInput,{extends:"input"});